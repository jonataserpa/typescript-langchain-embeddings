{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_1140",
  "content": "novos \nmétodos em seus objetos protótipos. Aqui está o código que adiciona um método para calcular o \nconjugado complexo na classe Complex do Exemplo 9-3:\n// Retorna a número complexo que é o conjugado complexo deste.\nComplex.prototype.conj = function() { return new Complex(this.r, -this.i); };\nO objeto protótipo de classes internas de JavaScript também é “aberto” como esse, ou seja, podemos \nadicionar métodos em números, strings, arrays, funções, etc. Fizemos isso no Exemplo 8-5, quando \nadicionamos um método bind() na classe de função em implementações ECMAScript 3, onde ele \nainda não",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 1140,
    "totalChunks": 10000
  }
}