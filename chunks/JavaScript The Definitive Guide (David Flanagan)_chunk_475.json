{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_475",
  "content": "uer nome \ndiferente de “eval”, era permitido lançar uma exceção EvalError.\nNa prática, a maioria dos implementadores fazia alguma coisa. Quando chamada por qualquer ou-\ntro nome, \neval() avaliava a string como se fosse código global de nível superior. O código avaliado \npodia definir novas variáveis globais ou funções globais e podia configurar variáveis globais, mas não \npodia utilizar nem modificar qualquer variável local na função chamadora e, portanto, não interferia \nnas otimizações locais.\nECMAScript 5 desaprova EvalError e padroniza o comportamento de fato de \neval(). Uma “eval",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 475,
    "totalChunks": 10000
  }
}