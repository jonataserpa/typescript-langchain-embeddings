{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_1077",
  "content": "ntos\nvar f = function(x,y,z) { return x * (y – z); };\n// Observe como essas três aplicações parciais diferem\npartialLeft(f, 2)(3,4) // => -2: Vincula o primeiro argumento: 2 * (3 – 4)\npartialRight(f, 2)(3,4)         // =>  6: Vincula o último argumento: 3 * (4 – 2)\npartial(f, undefined, 2)(3,4)   // => -6: Vincula o argumento do meio: 3 * (2 – 4)\nEssas funções de aplicação parcial nos permitem definir facilmente funções interessantes a partir de \nfunções que já definimos. Aqui estão alguns exemplos:\nvar increment = partialLeft(sum, 1);\nvar cuberoot = partialRight(Math.pow,",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 1077,
    "totalChunks": 10000
  }
}