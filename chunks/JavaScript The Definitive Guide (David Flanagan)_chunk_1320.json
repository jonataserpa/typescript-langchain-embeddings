{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_1320",
  "content": "imutáveis\n}\nRange.prototype = hideProps({   // Define prototype com propriedades não enumeráveis\n    constructor:    Range,\n    includes: function(x) { return this.from <= x && x <= this.to; },\n    foreach: function(f) {for(var x=Math.ceil(this.from);x<=this.to;x++) f(x);},\n    toString: function() { return \"(\" + this.from + \"...\" + this.to + \")\"; }\n});\n\nCapítulo 9     Classes e módulos      235\nJavaScript básica\n9.8.3   Encapsulando o estado do objeto\nA Seção 9.6.6 e o Exemplo 9-10 mostraram como variáveis ou argumentos de uma função constru-\ntora podem ser usados como estado privado dos",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 1320,
    "totalChunks": 10000
  }
}