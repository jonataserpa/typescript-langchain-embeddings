{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_1232",
  "content": "é definida genericamente e se você define uma classe \ncujas instâncias são objetos semelhantes a um array, pode copiar funções de Array.prototype \nno objeto protótipo de sua classe. Se você examinar JavaScript através da lente das linguagens \norientadas a objetos clássicas, o uso de métodos de uma classe como métodos de outra pode ser \nconsiderado uma forma de herança múltipla. Contudo, JavaScript não é uma linguagem orien-\ntada a objetos clássica e prefiro descrever esse tipo de reutilização de método usando o termo \ninformal empréstimo.\n\nCapítulo 9     Classes e módulos      219\nJavaScript",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 1232,
    "totalChunks": 10000
  }
}