{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_750",
  "content": "ropriedades\n * do objeto passado como argumento. Todos os atributos de propriedade são\n * copiados e não apenas o valor da propriedade. Todas as propriedades próprias (mesmo as não\n * enumeráveis) do objeto argumento são copiadas, a não ser que já\n * exista uma propriedade com mesmo nome no objeto de destino.\n */\nObject.defineProperty(Object.prototype,\n    \"extend\",         // Define Object.prototype.extend\n {\n        writable:    true,\n        enumerable: false,      // Torna-o não enumerável\n        configurable:    true,\n        value: function(o) {    // Seu valor é esta função",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 750,
    "totalChunks": 10000
  }
}