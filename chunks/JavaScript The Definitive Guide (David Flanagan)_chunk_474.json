{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_474",
  "content": "otimizadores de \nJavaScript. Contudo, como uma solução de contorno, os interpretadores simplesmente fazem me-\nnos otimização em qualquer função que chame eval(). Mas o que um interpretador JavaScript deve \nfazer se um script define um alias para eval() e depois chama essa função por outro nome? Para \nsimplificar a tarefa dos implementadores de JavaScript, o padrão ECMAScript 3 declarava que os \ninterpretadores não precisavam permitir isso. Se a função eval() fosse chamada por qualquer nome \ndiferente de “eval”, era permitido lançar uma exceção EvalError.\nNa prática, a maioria dos",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 474,
    "totalChunks": 10000
  }
}