{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_1061",
  "content": "ar mean = data.reduce(sum)/data.length;\nvar deviations = data.map(function(x) {return x-mean;});\nvar stddev = Math.sqrt(deviations.map(square).reduce(sum)/(data.length-1));\nE se estivéssemos usando ECMAScript 3 e não tivéssemos acesso a esses métodos de array mais re-\ncentes? Podemos definir nossas próprias funções map() e reduce() que utilizam os métodos internos, \ncaso eles existam:\n// Chama a função f para cada elemento do array a e retorna\n// um array dos resultados. Usa Array.prototype.map se estiver definido.\nvar map = Array.prototype.map\n    ? function(a, f) { return a.map(f); }",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 1061,
    "totalChunks": 10000
  }
}