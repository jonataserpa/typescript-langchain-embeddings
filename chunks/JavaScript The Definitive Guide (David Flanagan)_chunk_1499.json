{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_1499",
  "content": "3];      // x = 1, y = 2\n[,x,,y] = [1,2,3,4];  // x = 2, y = 4\nNão há sintaxe para atribuir todos os valores não utilizados ou restantes (como um array) a uma. Na \nsegunda linha de código acima, por exemplo, não há maneira de atribuir [2,3] a y.\nO valor de uma atribuição de desestruturação é a estrutura de dados completa do lado direito e não \nos valores individuais extraídos dela. Assim, é possível “encadear” atribuições, como segue:\nlet first, second, all;\nall = [first,second] = [1,2,3,4];    // first=1, second=2, all=[1,2,3,4]\n\n266          Parte     I     JavaScript     básica\nA",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 1499,
    "totalChunks": 10000
  }
}