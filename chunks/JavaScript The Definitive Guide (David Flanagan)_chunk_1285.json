{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_1285",
  "content": "s até filtrar um conjunto filtrado:\nvar t = new FilteredSet(s, { function(x} { return !(x instanceof Set); });\n9.7.4   Hierarquias de classe e classes abstratas\nNa seção anterior você foi estimulado a “preferir a composição em vez da herança”. Mas para ilus-\ntrarmos esse princípio, criamos uma subclasse de Set. Fizemos isso para que a classe resultante fosse \ninstanceof Set e para que ela pudesse herdar os métodos auxiliares úteis de Set, como toString() \ne equals(). Esses são motivos pragmáticos válidos, mas ainda teria sido ótimo fazer composição de \nconjunto sem fazer a subclasse de uma",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 1285,
    "totalChunks": 10000
  }
}