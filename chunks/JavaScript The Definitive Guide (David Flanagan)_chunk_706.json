{
  "id": "JavaScript The Definitive Guide (David Flanagan)_chunk_706",
  "content": "erador in pode fazer que a técnica simples de acesso à propriedade mostrada \nanteriormente não pode. in pode distinguir entre propriedades que não existem e propriedades que \nexistem mas foram configuradas como undefined. Considere este código:\nvar o = { x: undefined }   // A propriedade é configurada explicitamente como undefined\no.x !== undefined          // falso: a propriedade existe, mas é undefined\no.y !== undefined          // falso: a propriedade nem mesmo existe\n\"x\" in o                   // verdadeiro: a propriedade existe\n\"y\" in o                   // falso: a propriedade não",
  "metadata": {
    "source": "/home/jonata/Documentos/typescript-langchain/tmp/JavaScript The Definitive Guide (David Flanagan).pdf",
    "chunkIndex": 706,
    "totalChunks": 10000
  }
}